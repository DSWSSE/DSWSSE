// Code generated by command: go run asm.go -out not.s -stubs not.go. DO NOT EDIT.

#include "textflag.h"

// func NOT(a []byte, res []byte)
// Requires: AVX, AVX2
TEXT Â·NOT(SB), NOSPLIT, $0-48
	MOVQ a_base+0(FP), AX
	MOVQ res_base+24(FP), CX
	MOVQ a_len+8(FP), DX

blockloop:
	CMPQ     DX, $0x00000080
	JL       block32loop
	VPCMPEQB Y0, Y0, Y0
	VPCMPEQB Y1, Y1, Y1
	VPCMPEQB Y2, Y2, Y2
	VPCMPEQB Y3, Y3, Y3
	VPXOR    (AX), Y0, Y0
	VPXOR    32(AX), Y1, Y1
	VPXOR    64(AX), Y2, Y2
	VPXOR    96(AX), Y3, Y3
	VMOVUPS  Y0, (CX)
	VMOVUPS  Y1, 32(CX)
	VMOVUPS  Y2, 64(CX)
	VMOVUPS  Y3, 96(CX)
	ADDQ     $0x00000080, AX
	ADDQ     $0x00000080, CX
	SUBQ     $0x00000080, DX
	JMP      blockloop

block32loop:
	CMPQ     DX, $0x00000020
	JL       byteloop
	VPCMPEQB Y0, Y0, Y0
	VPXOR    (AX), Y0, Y0
	VMOVUPS  Y0, (CX)
	ADDQ     $0x00000020, AX
	ADDQ     $0x00000020, CX
	SUBQ     $0x00000020, DX
	JMP      block32loop

byteloop:
	CMPQ DX, $0x00000000
	JE   tail
	SUBQ $0x00000001, DX
	MOVB (AX)(DX*1), BL
	NOTB BL
	MOVB BL, (CX)(DX*1)
	JMP  byteloop

tail:
	RET
